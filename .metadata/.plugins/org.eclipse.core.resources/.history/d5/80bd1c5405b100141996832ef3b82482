package com.biplav.aiplanning.definitions;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Vector;

public class TreeSearch implements ISearch {
	
	Collection<Node> fringe;

	@Override
	public Vector<Node> search(IProblem problem, IStrategy strategy) {
		fringe = new ArrayList<Node>();
		fringe.add(new Node(null, problem.getInitialState(), null, 0));
		while(true) {
			if(fringe.isEmpty()) return null;
			Node node = selectFrom(strategy);
			if(problem.goalTest(node.getState())) {
				return pathTo(node);
			}
			fringe.addAll(expand(problem,node));
		}
	}


	@Override
	public Collection<Node> expand(IProblem problem, Node node) {
		Collection<IState> newStates = problem.expand(node.getState());
		
	}


	@Override
	public Node selectFrom(IStrategy strategy) {
		return null;
	}

	@Override
	public Vector<Node> pathTo(Node node) {
		return null;
	}

}
